apply plugin: 'com.android.application'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"
    defaultConfig {
        applicationId "com.example.androidinject"
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        externalNativeBuild {
            cmake {
                cppFlags ""
//                abiFilters "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
                abiFilters "armeabi-v7a", "arm64-v8a"
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
            version "3.10.2"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.swift.sandhook:hooklib:4.2.1'
// 不使用 Xposed API 则不需要引入
    implementation 'com.swift.sandhook:xposedcompat:4.2.+'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}

ext {
    //push的路径
    pushPath = "/data/local/tmp/"
    //可执行文件的名称
    elfName = "SharkInject"
    //部署的架构
    abi = 'armeabi-v7a'
    //so名称
    soName = "libLoadModule.so"
    //注入目标包名
    appName = "com.ss.android.ugc.aweme"
}

//将相关文件push到手机
task pushDevice(dependsOn: 'assembleDebug') {
    group 'Online-Device'
    description 'Debug with online device without remote server'

    doLast {
        //push到手机上
        def info = "adb push ${new File(project.buildDir, "/intermediates/dex/debug/mergeDexDebug/out/classes.dex").canonicalPath} $pushPath".execute().text
        println "Push dex:$info"

        info = "adb push ${new File(project.buildDir, "/intermediates/cmake/debug/obj/$abi/$elfName").canonicalPath} $pushPath".execute().text
        println "Push SharkInject:$info"

        info = "adb push ${new File(project.buildDir, "/intermediates/cmake/debug/obj/$abi/$soName").canonicalPath} $pushPath".execute().text
        println "Push libLoadModule.so:$info"
    }
}

//修改执行文件的权限
task chmodDevice(dependsOn: pushDevice) {
    group 'Online-Device'
    doLast {
        def info = "adb shell chmod 777 $pushPath/SharkInject".execute().text
        println "chmod:$info"
    }
}

//执行命令
task executeDevice(dependsOn: chmodDevice) {
    group 'Online-Device'
    doLast {
        def exec_cmd = "adb shell \"cd $pushPath;su -c $pushPath$elfName -f -n $appName\""
        println exec_cmd
        def info = exec_cmd.execute().text

        println "executeDevice:$info"
    }
}

